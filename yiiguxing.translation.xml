<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogWidth" value="548" />
    <option name="newTranslationDialogX" value="826" />
    <option name="newTranslationDialogY" value="470" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="set Swapped Feeds" />
      <item value="Enumerator" />
      <item value="Child" />
      <item value="previse" />
      <item value="admonish" />
      <item value="forewarn" />
      <item value="forestall" />
      <item value="caution" />
      <item value="警戒" />
      <item value="Lifecycles can only be bound to on the main thread!" />
      <item value="Dispose the resource, the operation should be idempotent." />
      <item value="手动" />
      <item value="shoud" />
      <item value="synthesize Text" />
      <item value="Inserts all of the elements of the specified collection [elements] into this list at the specified [index]. @return `true` if the list was changed as the result of the operation." />
      <item value="geometry1 and geometry2 must have equivalent spatial references" />
      <item value="distinct" />
      <item value="Patrol" />
      <item value="set Web View Data Directory Suffix" />
      <item value="View" />
      <item value="feedback" />
      <item value="feedback&#10;" />
      <item value="feedba" />
      <item value="feed" />
      <item value="PBC" />
      <item value="A key response is received from the license server by the app, then it is provided to the DRM engine plugin using provideKeyResponse. When the response is for an offline key request, a key-set identifier is returned that can be used to later restore the keys to a new session with the method {@ link restoreKeys}. When the response is for a streaming or release request, null is returned. @param keySetId When the response is for a release request, keySetId identifie the saved key associated with the release request (i.e., the same keySetId passed to the earlier {@ link getKeyRequest} call. It MUST be null when the response is for either streaming or offline key requests. @param response the byte array response from the server @throws NoDrmSchemeException if there is no active DRM session @throws DeniedByServerException if the response indicates that the server rejected the request" />
      <item value="set Pressed" />
      <item value="indeterminate" />
      <item value="default" />
      <item value="rsb indicator height" />
      <item value="indicator" />
      <item value="rsb thumb scale ratio" />
      <item value="rsb thumb inactivated drawable" />
      <item value="thumb" />
      <item value="switch Receive Mode" />
      <item value="The channel to the framework has been disconnected. Application could try re-initializing using {@link initialize}" />
      <item value="on Channel Disconnected" />
      <item value="Disconnected" />
      <item value="on Disconnected" />
      <item value="on Dis Connected" />
      <item value="group Formed" />
      <item value="progress" />
      <item value="剩余长度" />
      <item value="剩余" />
      <item value="sheng" />
      <item value="A data output stream lets an application write primitive Java data types to an output stream in a portable way. An application can then use a data input stream to read the data back in." />
      <item value="is Restricted" />
      <item value="The requested Bonjour service response is available. &lt;p&gt;This function is invoked when the device with the specified Bonjour registration type returned the instance name. @param instanceName instance name.&lt;br&gt; e.g) &quot;MyPrinter&quot;. @param registrationType &lt;br&gt; e.g) &quot;_ipp._tcp.local.&quot; @param srcDevice source device." />
      <item value="INSTANCE NAME" />
      <item value="Add a service discovery request. &lt;p&gt; The function call immediately returns after sending a request to add service discovery request to the framework. The application is notified of a success or failure to add service through listener callbacks {@link ActionListeneronSuccess} or {@link ActionListeneronFailure}. &lt;p&gt;After service discovery request is added, you can initiate service discovery by {@link discoverServices}. &lt;p&gt;The added service requests can be cleared with calls to {@link removeServiceRequest(Channel, WifiP2pServiceRequest, ActionListener)} or {@link clearServiceRequests(Channel, ActionListener)}. @param c is the channel created at {@link initialize} @param req is the service discovery request. @param listener for callbacks on success or failure. Can be null." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="773" />
        <entry key="ENGLISH" value="774" />
        <entry key="POLISH" value="2" />
        <entry key="GERMAN" value="2" />
        <entry key="FRENCH" value="12" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="2" />
        <entry key="JAPANESE" value="4" />
        <entry key="SWEDISH" value="2" />
        <entry key="WELSH" value="2" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="3" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="3" />
        <entry key="INDONESIAN" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1621938571174" />
  </component>
  <component name="Settings">
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Arial" />
    <option name="primaryFontFamily" value="SimSun" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>