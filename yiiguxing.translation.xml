<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogWidth" value="558" />
    <option name="newTranslationDialogX" value="826" />
    <option name="newTranslationDialogY" value="470" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Sets the position of the animation to the specified fraction. This fraction should be between 0 and the total fraction of the animation, including any repetition. That is, a fraction of 0 will position the animation at the beginning, a value of 1 at the end, and a value of 2 at the end of a reversing animator that repeats once. If the animation has not yet been started, then it will not advance forward after it is set to this fraction; it will simply set the fraction to this value and perform any appropriate actions based on that fraction. If the animation is already running, then setCurrentFraction() will set the current fraction to this value and continue playing from that point. {@link Animator.AnimatorListener} events are not called due to changing the fraction; those events are only processed while the animation is running. @param fraction The fraction to which the animation is advanced or rewound. Values outside the range of 0 to the maximum fraction for the animator will be clamped to the correct range." />
      <item value="Fraction" />
      <item value="set Current Fraction" />
      <item value="DASH" />
      <item value="indefinitely" />
      <item value="multiplied By" />
      <item value="multiplied" />
      <item value="divided By" />
      <item value="m Conference Adapter" />
      <item value="m Adhoc Conference Callback" />
      <item value="Quote" />
      <item value="过期&#10;" />
      <item value="for Each Remaining" />
      <item value="MODE MULTI" />
      <item value="muc" />
      <item value="Adhoc" />
      <item value="trim" />
      <item value="register Data Set Observer" />
      <item value="percentage Complete" />
      <item value="noinline" />
      <item value="disable Edit" />
      <item value="disable" />
      <item value="平板电脑" />
      <item value="平板dian" />
      <item value="pingb" />
      <item value="tablet" />
      <item value="平板" />
      <item value="platform" />
      <item value="For some reason the multiple keyevent type is not supported by the ndk. Force event injection by overriding dispatchKeyEvent()." />
      <item value="{@link getAction} value: multiple duplicate key events have occurred in a row, or a complex string is being delivered. If the key code is not {link {@link KEYCODE_UNKNOWN} then the {link {@link getRepeatCount()} method returns the number of times the given key code should be executed. Otherwise, if the key code is {@link KEYCODE_UNKNOWN}, then this is a sequence of characters as returned by {@link getCharacters}." />
      <item value="Called when a generic motion event was not handled by any of the views inside of the activity. &lt;p&gt; Generic motion events describe joystick movements, mouse hovers, track pad touches, scroll wheel movements and other input events. The {@link MotionEventgetSource() source} of the motion event specifies the class of input that was received. Implementations of this method must examine the bits in the source before processing the event. The following code example shows how this is done. &lt;p&gt;&lt;p&gt; Generic motion events with source class {@link android.view.InputDeviceSOURCE_CLASS_POINTER} are delivered to the view under the pointer. All other generic motion events ar delivered to the focused view. &lt;p&gt;&lt;p&gt; See {@link ViewonGenericMotionEvent(MotionEvent)} for an example of how to handle this event. &lt;p&gt; @param event The generic motion event being processed. @return Return true if you have consumed the event, false if you haven't. The default implementation always returns false." />
      <item value="TOPOGRAPHIC" />
      <item value="OCEANS" />
      <item value="Mobile map package contains raster data that requires the mobile map package to be unpacked in a directory before use." />
      <item value="chatty" />
      <item value="后台运行" />
      <item value="后台yu" />
      <item value="后台yuxn" />
      <item value="后台xun" />
      <item value="后台xunx" />
      <item value="run On Backing" />
      <item value="run On Backed" />
      <item value="Strip" />
      <item value="Shown" />
      <item value="marker" />
      <item value="Lisenter" />
      <item value="用户管理" />
      <item value="用户guan" />
      <item value="取消" />
      <item value="arms" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="756" />
        <entry key="ENGLISH" value="757" />
        <entry key="POLISH" value="2" />
        <entry key="GERMAN" value="2" />
        <entry key="FRENCH" value="12" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="2" />
        <entry key="JAPANESE" value="4" />
        <entry key="SWEDISH" value="2" />
        <entry key="WELSH" value="2" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="3" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="3" />
        <entry key="INDONESIAN" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1617092543532" />
  </component>
  <component name="Settings">
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Arial" />
    <option name="primaryFontFamily" value="SimSun" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>