<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogWidth" value="574" />
    <option name="newTranslationDialogX" value="826" />
    <option name="newTranslationDialogY" value="470" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Failure" />
      <item value="indeterminate" />
      <item value="@deprecated &lt;code&gt;ProgressDialog&lt;code&gt; is a modal dialog, which prevents the user from interacting with the app. Instead of using this class, you should use a progress indicator like {@link android.widget.ProgressBar}, which can be embedded in your app's UI. Alternatively, you can use a &lt;a href=&quot;guidetopicsuinotifiersnotifications.html&quot;&gt;notification&lt;a&gt; to inform the user of the task's progress." />
      <item value="变量" />
      <item value="bian" />
      <item value="calling Fragment constructor caused an exception" />
      <item value="host" />
      <item value="Unassigned" />
      <item value="User" />
      <item value="our" />
      <item value="我方&#10;" />
      <item value="own" />
      <item value="stroke Line Join" />
      <item value="未知目标" />
      <item value="未知" />
      <item value="failure" />
      <item value="设备故障" />
      <item value="设备" />
      <item value="confirm" />
      <item value="损坏&#10;" />
      <item value="损坏" />
      <item value="s" />
      <item value="shunhui" />
      <item value="marker" />
      <item value="Mark" />
      <item value="rest" />
      <item value="penetration" />
      <item value="Penetration" />
      <item value="is Penetration" />
      <item value="Transportation" />
      <item value="Patrol" />
      <item value="巡逻" />
      <item value="经度" />
      <item value="Locations" />
      <item value="coordinate" />
      <item value="坐标" />
      <item value="volatile" />
      <item value="Tips" />
      <item value="贴士" />
      <item value="tieshi" />
      <item value="ties" />
      <item value="提示" />
      <item value="Tip" />
      <item value="Positive" />
      <item value="Returns a property delegate to access a [ViewModel] scoped to a navigation graph present on the {@link NavController} back stack: ``` class MyFragment : Fragment() { val viewmodel: MainViewModel by navGraphViewModels(R.navigation.main) } ``` Custom [ViewModelProvider.Factory] can be defined via [factoryProducer] parameter, factory returned by it will be used to create [ViewModel]: ``` class MyFragment : Fragment() { val viewmodel: MainViewModel by navGraphViewModels(R.id.main) { myFactory } } ``` This property can be accessed only after this NavGraph is on the NavController back stack, and an attempt access prior to that will result in an IllegalArgumentException. @param navGraphId ID of a NavGraph that exists on the {@link NavController} back stack" />
      <item value="The 'kotlin-android-extensions' Gradle plugin is deprecated." />
      <item value="default Nav Host" />
      <item value="exhaustive" />
      <item value="Enqueue a message at the front of the message queue, to be processed on the next iteration of the message loop. You will receive it in {@link handleMessage}, in the thread attached to this handler. &lt;b&gt;This method is only for use in very special circumstances -- it can easily starve the message queue, cause ordering problems, or have other unexpected side-effects.&lt;b&gt; @return Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting." />
      <item value="Enqueue a message into the message queue after all pending messages before the absolute time (in milliseconds) &lt;var&gt;uptimeMillis&lt;var&gt;. &lt;b&gt;The time-base is {@link android.os.SystemClockuptimeMillis}.&lt;b&gt; Time spent in deep sleep will add an additional delay to execution. You will receive it in {@link handleMessage}, in the thread attached to this handler. @param uptimeMillis The absolute time at which the message should be delivered, using the {@link android.os.SystemClockuptimeMillis} time-base. @return Returns true if the message was successfully placed in to the message queue. Returns false on failure, usually because the looper processing the message queue is exiting. Note that a result of true does not mean the message will be processed -- if the looper is quit before the delivery time of the message occurs then the message will be dropped." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="709" />
        <entry key="ENGLISH" value="710" />
        <entry key="POLISH" value="2" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="11" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="2" />
        <entry key="JAPANESE" value="4" />
        <entry key="SWEDISH" value="2" />
        <entry key="WELSH" value="2" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="3" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="3" />
        <entry key="INDONESIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1617434367886" />
  </component>
  <component name="Settings">
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Arial" />
    <option name="primaryFontFamily" value="SimSun" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>