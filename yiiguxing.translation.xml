<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="588" />
    <option name="newTranslationDialogX" value="826" />
    <option name="newTranslationDialogY" value="470" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="UUID identified with this app - set as Service UUID for BLE Chat. Bluetooth requires a certain format for UUIDs associated with Services. The official specification can be found here: [:www.bluetooth.orgen-usspecificationassigned-numbersservice-discovery][https]" />
      <item value="Updates the locally stored value of this characteristic. &lt;p&gt;This function modifies the locally stored cached value of this characteristic. To send the value to the remote device, call {@link BluetoothGattwriteCharacteristic} to send the value to the remote device. @param value New value for this characteristic @return true if the locally stored value has been set, false if the requested value could not be stored locally." />
      <item value="Discovered" />
      <item value="on Services Discovered" />
      <item value="object set to use low power (to preserve battery life)." />
      <item value="exhaustive" />
      <item value="destination" />
      <item value="Start advertising this device so other BLE devices can see it and connect" />
      <item value="Advertising" />
      <item value="start Advertising" />
      <item value="Advertiser" />
      <item value="Returns a {@link BluetoothLeAdvertiser} object for Bluetooth LE Advertising operations. Will return null if Bluetooth is turned off or if Bluetooth LE Advertising is not supported on this device. &lt;p&gt; Use {@link isMultipleAdvertisementSupported()} to check whether LE Advertising is supported on this device before calling this method." />
      <item value="Create a new BluetoothGattCharacteristic. &lt;p&gt;Requires {@link android.Manifest.permissionBLUETOOTH} permission. @param uuid The UUID for this characteristic @param properties Properties of this characteristic @param permissions Permissions for this characteristic" />
      <item value="PERMISSION" />
      <item value="PROPERTY" />
      <item value="PROPERTY WRITE" />
      <item value="Bluetooth Gatt Characteristic" />
      <item value="on Failed" />
      <item value="班组" />
      <item value="right side" />
      <item value="Marker" />
      <item value="Fragment" />
      <item value="Mark" />
      <item value="Badge" />
      <item value="Vibration" />
      <item value="enable Vibration" />
      <item value="set Bypass Dnd" />
      <item value="Trust anchor for certification path not found." />
      <item value="islands" />
      <item value="island" />
      <item value="is" />
      <item value="岛屿" />
      <item value="岛屿&#10;" />
      <item value="land&#10;" />
      <item value="land" />
      <item value="exploded" />
      <item value="Creates a new array with the specified [size], where each element is calculated by calling the specified [init] function. The function [init] is called for each array element sequentially starting from the first one. It should return the value for an array element given its index." />
      <item value="run For Multiple Inputs Outputs" />
      <item value="Compute the FPS of the entire pipeline" />
      <item value="prediction" />
      <item value="Intrinsic for converting an Android YUV buffer to RGB. The input allocation should be supplied in a supported YUV format as a YUV element Allocation. The output is RGBA; the alpha channel will be set to 255." />
      <item value="Get the YUV data in byte array form using NV21 format" />
      <item value="Copy from the Allocation into a {@link android.graphics.Bitmap}. The bitmap must match the dimensions of the Allocation. @param b The bitmap to be set from the Allocation." />
      <item value="pixel Stride" />
      <item value="Take into account that the stride may include data from pixels other than this particular plane and row, and that could be between pixels and not after every pixel: |---- Pixel stride ----| Row ends here --&gt; | | Pixel 1 | Other Data | Pixel 2 | Other Data | ... | Pixel N | We need to get (N-1) (pixel stride bytes) per row + 1 byte for the last pixel" />
      <item value="For NV21 format, V is in even-numbered indices" />
      <item value="For NV21 format, U is in odd-numbered indices" />
      <item value="Get the array of pixel planes for this Image. The number of planes is determined by the format of the Image. The application will get an empty array if the image format is {@link android.graphics.ImageFormatPRIVATE PRIVATE}, because the image pixel data is not directly accessible. The application can check the image format by calling {@link ImagegetFormat()}." />
      <item value="Get the crop rectangle associated with this frame. &lt;p&gt; The crop rectangle specifies the region of valid pixels in the image, using coordinates in the largest-resolution plane." />
      <item value="planes" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="635" />
        <entry key="ENGLISH" value="636" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="1" />
        <entry key="FRENCH" value="10" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="4" />
        <entry key="SWEDISH" value="2" />
        <entry key="WELSH" value="2" />
        <entry key="SPANISH" value="1" />
        <entry key="GREEK" value="3" />
        <entry key="HUNGARIAN" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="3" />
        <entry key="INDONESIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1611557689806" />
  </component>
  <component name="Settings">
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Arial" />
    <option name="primaryFontFamily" value="SimSun" />
  </component>
</application>