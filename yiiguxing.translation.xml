<application>
  <component name="AppStorage">
    <histories>
      <item value="Segment" />
      <item value="Immutable Part" />
      <item value="get Azimuth 1" />
      <item value="Scene View" />
      <item value="METRIC" />
      <item value="IMPERIAL" />
      <item value="Linear Unit" />
      <item value="set up the distance composite symbol" />
      <item value="Distance Composite Scene Symbol" />
      <item value="The input spatial reference does not match the owning spatial reference. They must be equivalent or an input null is permitted and assumed to match the owner spatial reference." />
      <item value="mroutetest" />
      <item value="mroutetest Graphics Overlay" />
      <item value="DASH" />
      <item value="TOPOGRAPHIC" />
      <item value="COMPASS" />
      <item value="Auto Pan Mode" />
      <item value="target Location" />
      <item value="get Tap Location" />
      <item value="set Viewpoint Geometry Async" />
      <item value="newdifvertical" />
      <item value="get Traversed Geometry" />
      <item value="get Remaining Geometry" />
      <item value="set geometries for the route ahead and the remaining route" />
      <item value="create a graphic (solid) to represent the route that's been traveled (initially empty)" />
      <item value="create a graphic (with a dashed line symbol) to represent the route" />
      <item value="m Route Traveled Graphic" />
      <item value="m Route Ahead Graphic" />
      <item value="Traveled" />
      <item value="Ahead" />
      <item value="enable Rerouting Async" />
      <item value="generate" />
      <item value="set up a RouteTracker for navigation along the calculated route" />
      <item value="offlinegeocode" />
      <item value="kml" />
      <item value="Shows straightforward ways to create Point, Envelope, Multipoint, Polyline, and Polygon geometries. Shows a MapView * with a GraphicsOverlay containing Graphics created from the Point, Multipoint, Polyline, and Polygon geometries, and * sets the Viewpoint of the Map from the Envelope geometry." />
      <item value="arrived at the final destination" />
      <item value="åˆ†" />
      <item value="solve Route Async" />
      <item value="create Default Parameters Async" />
      <item value="generate a route with directions and stops for navigation" />
      <item value="Stop" />
      <item value="m Child Background Paint" />
      <item value="Child" />
      <item value="is Expand" />
      <item value="Restricted constructor. * * @param lowerLimit the lower field limit, null means no limit * @param upperLimit the upper field limit, null means no limit" />
      <item value="arrow" />
      <item value="Converts this duration to a period in days assuming that there are the * standard number of milliseconds in a day. * &lt;p&gt; * This method assumes that there are 24 hours in a day, * 60 minutes in an hour, 60 seconds in a minute and 1000 milliseconds in * a second. This will be true for most days, however days with Daylight * Savings changes will not have 24 hours, so use this method with care. * * @return a period representing the number of standard days in this period, never null * @throws ArithmeticException if the number of days is too large to be represented * @since 2.0" />
      <item value="inflater" />
      <item value="percentage" />
      <item value="ONHOLD" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="391" />
        <entry key="ENGLISH" value="392" />
        <entry key="POLISH" value="1" />
        <entry key="FRENCH" value="2" />
        <entry key="CATALAN" value="2" />
        <entry key="KANNADA" value="1" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
        <entry key="WELSH" value="2" />
        <entry key="GREEK" value="3" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="overrideFont" value="true" />
    <option name="phoneticFontFamily" value="Consolas" />
  </component>
</application>